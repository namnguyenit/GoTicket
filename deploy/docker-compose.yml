version: "3.9"
services:
  # ---------------- Elasticsearch Cluster ----------------
  es-master-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - node.name=es-master-1
      - cluster.name=goticket-es
      - discovery.seed_hosts=es-master-1,es-data-1,es-data-2,es-coord-1,es-coord-2
      - cluster.initial_master_nodes=es-master-1
      - node.roles=master
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      memlock: { soft: -1, hard: -1 }
    volumes:
      - es-master-1-data:/usr/share/elasticsearch/data
    networks: [core]

  es-data-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - node.name=es-data-1
      - cluster.name=goticket-es
      - discovery.seed_hosts=es-master-1,es-data-1,es-data-2,es-coord-1,es-coord-2
      - node.roles=data,ingest
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock: { soft: -1, hard: -1 }
    volumes:
      - es-data-1-data:/usr/share/elasticsearch/data
    networks: [core]

  es-data-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - node.name=es-data-2
      - cluster.name=goticket-es
      - discovery.seed_hosts=es-master-1,es-data-1,es-data-2,es-coord-1,es-coord-2
      - node.roles=data,ingest
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock: { soft: -1, hard: -1 }
    volumes:
      - es-data-2-data:/usr/share/elasticsearch/data
    networks: [core]

  es-coord-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - node.name=es-coord-1
      - cluster.name=goticket-es
      - discovery.seed_hosts=es-master-1,es-data-1,es-data-2,es-coord-1,es-coord-2
      - node.roles=remote_cluster_client
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      memlock: { soft: -1, hard: -1 }
    networks: [core]

  es-coord-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - node.name=es-coord-2
      - cluster.name=goticket-es
      - discovery.seed_hosts=es-master-1,es-data-1,es-data-2,es-coord-1,es-coord-2
      - node.roles=remote_cluster_client
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      memlock: { soft: -1, hard: -1 }
    networks: [core]

  nginx-es:
    image: nginx:1.27
    depends_on: [es-coord-1, es-coord-2]
    ports:
      - "9200:9200"
    volumes:
      - ./nginx/es.conf:/etc/nginx/conf.d/es.conf:ro
    networks: [core]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    environment:
      - ELASTICSEARCH_HOSTS=["http://es-coord-1:9200","http://es-coord-2:9200"]
      - SERVER_PUBLICBASEURL=http://localhost:5601
      - XPACK_SECURITY_ENABLED=false
    depends_on:
      - es-coord-1
      - es-coord-2
    ports:
      - "5601:5601"
    networks: [core]

  # ---------------- Application Layer ----------------
  back-end-1:
    build: ../back-end
    env_file: ../back-end/.env
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - LOG_CHANNEL=stderr
      - DB_CONNECTION=mysql
      - DB_HOST=${MYSQL_HOST}
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - ELASTICSEARCH_HOSTS=http://es-coord-1:9200,http://es-coord-2:9200
      - SEARCH_DRIVER=elasticsearch
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/up"]
      interval: 30s
      timeout: 5s
      retries: 3

  back-end-2:
    build: ../back-end
    env_file: ../back-end/.env
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - LOG_CHANNEL=stderr
      - DB_CONNECTION=mysql
      - DB_HOST=${MYSQL_HOST}
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - ELASTICSEARCH_HOSTS=http://es-coord-1:9200,http://es-coord-2:9200
      - SEARCH_DRIVER=elasticsearch
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/up"]
      interval: 30s
      timeout: 5s
      retries: 3

  back-end-3:
    build: ../back-end
    env_file: ../back-end/.env
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - LOG_CHANNEL=stderr
      - DB_CONNECTION=mysql
      - DB_HOST=${MYSQL_HOST}
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - ELASTICSEARCH_HOSTS=http://es-coord-1:9200,http://es-coord-2:9200
      - SEARCH_DRIVER=elasticsearch
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/up"]
      interval: 30s
      timeout: 5s
      retries: 3

  user-fe-1:
    build: ../front-end
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/nginx_health"]
      interval: 30s
      timeout: 5s
      retries: 3

  user-fe-2:
    build: ../front-end
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/nginx_health"]
      interval: 30s
      timeout: 5s
      retries: 3

  user-fe-3:
    build: ../front-end
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/nginx_health"]
      interval: 30s
      timeout: 5s
      retries: 3

  admin-fe:
    build: ../admin-dashboard
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/nginx_health"]
      interval: 30s
      timeout: 5s
      retries: 3

  vendor-fe:
    build: ../vendor-front-end
    environment:
      - PORT=3000
    networks: [core]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx-back-1:
    image: nginx:1.27
    depends_on:
      - back-end-1
      - back-end-2
      - back-end-3
    networks: [core]
    volumes:
      - ./nginx/back.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/nginx_health"]
      interval: 30s
    
  nginx-front-1:
    image: nginx:1.27
    depends_on:
      - user-fe-1
      - user-fe-2
      - user-fe-3
      - admin-fe
      - vendor-fe
      - nginx-back-1
    networks: [core]
    ports:
      - "80:80"
    volumes:
      - ./nginx/front.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/nginx_health"]
      interval: 30s

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.14.0
    user: root
    depends_on:
      - nginx-front-1
      - nginx-back-1
      - kibana
    networks: [core]
    volumes:
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["-e"]

networks:
  core:
    driver: bridge

volumes:
  es-master-1-data:
  es-data-1-data:
  es-data-2-data:

